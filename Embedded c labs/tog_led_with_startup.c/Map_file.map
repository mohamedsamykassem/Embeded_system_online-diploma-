
Allocating common symbols
Common symbol       size              file

n                   0x4               main.o

Memory Configuration

Name             Origin             Length             Attributes
flash            0x0000000008000000 0x0000000000020000 xr
sram             0x0000000020000000 0x0000000000005000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map


.text           0x0000000008000000      0x130
 *(.vectors*)
 .vectors       0x0000000008000000       0x14 startup.o
                0x0000000008000000                vector
 *(.text*)
 .text          0x0000000008000014       0x88 main.o
                0x0000000008000014                h_fault_handler
                0x0000000008000020                main
 .text          0x000000000800009c       0x90 startup.o
                0x000000000800009c                default_handler
                0x000000000800009c                nmi_handler
                0x000000000800009c                mm_fault_handler
                0x00000000080000a8                rest_handler
 *(.rodata)
 .rodata        0x000000000800012c        0x4 main.o
                0x000000000800012c                x
                0x0000000008000130                _E_text = .

.glue_7         0x0000000008000130        0x0
 .glue_7        0x0000000008000130        0x0 linker stubs

.glue_7t        0x0000000008000130        0x0
 .glue_7t       0x0000000008000130        0x0 linker stubs

.vfp11_veneer   0x0000000008000130        0x0
 .vfp11_veneer  0x0000000008000130        0x0 linker stubs

.v4_bx          0x0000000008000130        0x0
 .v4_bx         0x0000000008000130        0x0 linker stubs

.iplt           0x0000000008000130        0x0
 .iplt          0x0000000008000130        0x0 main.o

.rel.dyn        0x0000000008000130        0x0
 .rel.iplt      0x0000000008000130        0x0 main.o

.data           0x0000000020000000        0x0 load address 0x0000000008000130
                0x0000000020000000                _S_DATA = .
 *(.data)
 .data          0x0000000020000000        0x0 main.o
 .data          0x0000000020000000        0x0 startup.o
                0x0000000020000000                _E_DATA = .

.igot.plt       0x0000000020000000        0x0 load address 0x0000000008000130
 .igot.plt      0x0000000020000000        0x0 main.o

.bss            0x0000000020000000     0x1004 load address 0x0000000008000130
                0x0000000020000000                _S_bss = .
 *(.bss*)
 .bss           0x0000000020000000        0x0 main.o
 .bss           0x0000000020000000        0x0 startup.o
                0x0000000020000000                _E_bss = .
                0x0000000020001000                . = (. + 0x1000)
 *fill*         0x0000000020000000     0x1000 
                0x0000000020001000                _stack_top = .
 COMMON         0x0000000020001000        0x4 main.o
                0x0000000020001000                n
LOAD main.o
LOAD startup.o
OUTPUT(flashing.elf elf32-littlearm)

.debug_info     0x0000000000000000      0xbd1
 .debug_info    0x0000000000000000      0xa0e main.o
 .debug_info    0x0000000000000a0e      0x1c3 startup.o

.debug_abbrev   0x0000000000000000      0x29c
 .debug_abbrev  0x0000000000000000      0x1c8 main.o
 .debug_abbrev  0x00000000000001c8       0xd4 startup.o

.debug_loc      0x0000000000000000       0xf8
 .debug_loc     0x0000000000000000       0x7c main.o
 .debug_loc     0x000000000000007c       0x7c startup.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 startup.o

.debug_line     0x0000000000000000      0x4bf
 .debug_line    0x0000000000000000      0x2cd main.o
 .debug_line    0x00000000000002cd      0x1f2 startup.o

.debug_str      0x0000000000000000      0x538
 .debug_str     0x0000000000000000      0x4c4 main.o
                                        0x52b (size before relaxing)
 .debug_str     0x00000000000004c4       0x74 startup.o
                                        0x1ac (size before relaxing)

.comment        0x0000000000000000       0x7b
 .comment       0x0000000000000000       0x7b main.o
                                         0x7c (size before relaxing)
 .comment       0x000000000000007b       0x7c startup.o

.ARM.attributes
                0x0000000000000000       0x33
 .ARM.attributes
                0x0000000000000000       0x33 main.o
 .ARM.attributes
                0x0000000000000033       0x33 startup.o

.debug_frame    0x0000000000000000       0x9c
 .debug_frame   0x0000000000000000       0x4c main.o
 .debug_frame   0x000000000000004c       0x50 startup.o
