
interrupt_using_stm32103c6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000023c  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800036c  08000374  00010374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800036c  0800036c  00010374  2**0
                  CONTENTS
  4 .ARM          00000000  0800036c  0800036c  00010374  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800036c  08000374  00010374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800036c  0800036c  0001036c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000370  08000370  00010370  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000374  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000374  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010374  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a3e  00000000  00000000  0001039d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001a9  00000000  00000000  00010ddb  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00000104  00000000  00000000  00010f84  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000060  00000000  00000000  00011088  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000048  00000000  00000000  000110e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  00001c7f  00000000  00000000  00011130  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   00000634  00000000  00000000  00012daf  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    0000808b  00000000  00000000  000133e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      0000007b  00000000  00000000  0001b46e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000bc  00000000  00000000  0001b4ec  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000354 	.word	0x08000354

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000354 	.word	0x08000354

08000170 <main>:
void pin_init();
void init_INTERRUPT ();


int main (void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	b082      	sub	sp, #8
 8000174:	af00      	add	r7, sp, #0


	pin_init();
 8000176:	f000 f851 	bl	800021c <pin_init>
	init_INTERRUPT ();
 800017a:	f000 f82b 	bl	80001d4 <init_INTERRUPT>

	while(1){

		GPIOB_ODR ^=(1<<0);
 800017e:	4b09      	ldr	r3, [pc, #36]	; (80001a4 <main+0x34>)
 8000180:	681b      	ldr	r3, [r3, #0]
 8000182:	4a08      	ldr	r2, [pc, #32]	; (80001a4 <main+0x34>)
 8000184:	f083 0301 	eor.w	r3, r3, #1
 8000188:	6013      	str	r3, [r2, #0]
		for(int i=0 ; i<3000 ; i++);
 800018a:	2300      	movs	r3, #0
 800018c:	607b      	str	r3, [r7, #4]
 800018e:	e002      	b.n	8000196 <main+0x26>
 8000190:	687b      	ldr	r3, [r7, #4]
 8000192:	3301      	adds	r3, #1
 8000194:	607b      	str	r3, [r7, #4]
 8000196:	687b      	ldr	r3, [r7, #4]
 8000198:	f640 32b7 	movw	r2, #2999	; 0xbb7
 800019c:	4293      	cmp	r3, r2
 800019e:	ddf7      	ble.n	8000190 <main+0x20>
		GPIOB_ODR ^=(1<<0);
 80001a0:	e7ed      	b.n	800017e <main+0xe>
 80001a2:	bf00      	nop
 80001a4:	40010c0c 	.word	0x40010c0c

080001a8 <EXTI0_IRQHandler>:

	}
	return 0;
}

void EXTI0_IRQHandler(){
 80001a8:	b480      	push	{r7}
 80001aa:	af00      	add	r7, sp, #0
	GPIOA_ODR ^= (1<<13);
 80001ac:	4b07      	ldr	r3, [pc, #28]	; (80001cc <EXTI0_IRQHandler+0x24>)
 80001ae:	681b      	ldr	r3, [r3, #0]
 80001b0:	4a06      	ldr	r2, [pc, #24]	; (80001cc <EXTI0_IRQHandler+0x24>)
 80001b2:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 80001b6:	6013      	str	r3, [r2, #0]
	//GPIOB_ODR ^=(1<<0);
	PANDING |= (1<<0);
 80001b8:	4b05      	ldr	r3, [pc, #20]	; (80001d0 <EXTI0_IRQHandler+0x28>)
 80001ba:	681b      	ldr	r3, [r3, #0]
 80001bc:	4a04      	ldr	r2, [pc, #16]	; (80001d0 <EXTI0_IRQHandler+0x28>)
 80001be:	f043 0301 	orr.w	r3, r3, #1
 80001c2:	6013      	str	r3, [r2, #0]

}
 80001c4:	bf00      	nop
 80001c6:	46bd      	mov	sp, r7
 80001c8:	bc80      	pop	{r7}
 80001ca:	4770      	bx	lr
 80001cc:	4001080c 	.word	0x4001080c
 80001d0:	4001040c 	.word	0x4001040c

080001d4 <init_INTERRUPT>:
void init_INTERRUPT (){
 80001d4:	b480      	push	{r7}
 80001d6:	af00      	add	r7, sp, #0
	AFIO_EXTICR1= 0;   // P0 PORT A USING IT IN INTERRUPT
 80001d8:	4b0c      	ldr	r3, [pc, #48]	; (800020c <init_INTERRUPT+0x38>)
 80001da:	2200      	movs	r2, #0
 80001dc:	601a      	str	r2, [r3, #0]
	RISING |= (1<<0);
 80001de:	4b0c      	ldr	r3, [pc, #48]	; (8000210 <init_INTERRUPT+0x3c>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	4a0b      	ldr	r2, [pc, #44]	; (8000210 <init_INTERRUPT+0x3c>)
 80001e4:	f043 0301 	orr.w	r3, r3, #1
 80001e8:	6013      	str	r3, [r2, #0]
	MASK |= (1<<0);
 80001ea:	4b0a      	ldr	r3, [pc, #40]	; (8000214 <init_INTERRUPT+0x40>)
 80001ec:	681b      	ldr	r3, [r3, #0]
 80001ee:	4a09      	ldr	r2, [pc, #36]	; (8000214 <init_INTERRUPT+0x40>)
 80001f0:	f043 0301 	orr.w	r3, r3, #1
 80001f4:	6013      	str	r3, [r2, #0]
	NVIC |= (1<<6);
 80001f6:	4b08      	ldr	r3, [pc, #32]	; (8000218 <init_INTERRUPT+0x44>)
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	4a07      	ldr	r2, [pc, #28]	; (8000218 <init_INTERRUPT+0x44>)
 80001fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000200:	6013      	str	r3, [r2, #0]


}
 8000202:	bf00      	nop
 8000204:	46bd      	mov	sp, r7
 8000206:	bc80      	pop	{r7}
 8000208:	4770      	bx	lr
 800020a:	bf00      	nop
 800020c:	40010008 	.word	0x40010008
 8000210:	40010408 	.word	0x40010408
 8000214:	40010400 	.word	0x40010400
 8000218:	e000e100 	.word	0xe000e100

0800021c <pin_init>:
void pin_init(){
 800021c:	b480      	push	{r7}
 800021e:	af00      	add	r7, sp, #0
	// pi 13 is out led
	APB2_ENP |=(1<<0);
 8000220:	4b1f      	ldr	r3, [pc, #124]	; (80002a0 <pin_init+0x84>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a1e      	ldr	r2, [pc, #120]	; (80002a0 <pin_init+0x84>)
 8000226:	f043 0301 	orr.w	r3, r3, #1
 800022a:	6013      	str	r3, [r2, #0]
	APB2_ENP |=(1<<2);
 800022c:	4b1c      	ldr	r3, [pc, #112]	; (80002a0 <pin_init+0x84>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a1b      	ldr	r2, [pc, #108]	; (80002a0 <pin_init+0x84>)
 8000232:	f043 0304 	orr.w	r3, r3, #4
 8000236:	6013      	str	r3, [r2, #0]
	APB2_ENP |=(1<<3);
 8000238:	4b19      	ldr	r3, [pc, #100]	; (80002a0 <pin_init+0x84>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a18      	ldr	r2, [pc, #96]	; (80002a0 <pin_init+0x84>)
 800023e:	f043 0308 	orr.w	r3, r3, #8
 8000242:	6013      	str	r3, [r2, #0]
	GPIOA_CHR &=0XFF0FFFFF;
 8000244:	4b17      	ldr	r3, [pc, #92]	; (80002a4 <pin_init+0x88>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	4a16      	ldr	r2, [pc, #88]	; (80002a4 <pin_init+0x88>)
 800024a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800024e:	6013      	str	r3, [r2, #0]
	GPIOA_CHR |=0X00200000;
 8000250:	4b14      	ldr	r3, [pc, #80]	; (80002a4 <pin_init+0x88>)
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	4a13      	ldr	r2, [pc, #76]	; (80002a4 <pin_init+0x88>)
 8000256:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800025a:	6013      	str	r3, [r2, #0]



	// Port b0 is input pin to make interrupt
	GPIOA_CRL |= (1<<2);
 800025c:	4b12      	ldr	r3, [pc, #72]	; (80002a8 <pin_init+0x8c>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	4a11      	ldr	r2, [pc, #68]	; (80002a8 <pin_init+0x8c>)
 8000262:	f043 0304 	orr.w	r3, r3, #4
 8000266:	6013      	str	r3, [r2, #0]
	//PORTA B0 IS OUT PUT

	GPIOB_CRL &=0XFFFFFFF0;
 8000268:	4b10      	ldr	r3, [pc, #64]	; (80002ac <pin_init+0x90>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	4a0f      	ldr	r2, [pc, #60]	; (80002ac <pin_init+0x90>)
 800026e:	f023 030f 	bic.w	r3, r3, #15
 8000272:	6013      	str	r3, [r2, #0]
	GPIOB_CRL |=0X00000002;
 8000274:	4b0d      	ldr	r3, [pc, #52]	; (80002ac <pin_init+0x90>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	4a0c      	ldr	r2, [pc, #48]	; (80002ac <pin_init+0x90>)
 800027a:	f043 0302 	orr.w	r3, r3, #2
 800027e:	6013      	str	r3, [r2, #0]

	GPIOA_ODR |= (1<<13);
 8000280:	4b0b      	ldr	r3, [pc, #44]	; (80002b0 <pin_init+0x94>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	4a0a      	ldr	r2, [pc, #40]	; (80002b0 <pin_init+0x94>)
 8000286:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800028a:	6013      	str	r3, [r2, #0]
	GPIOB_ODR |=(1<<0);
 800028c:	4b09      	ldr	r3, [pc, #36]	; (80002b4 <pin_init+0x98>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	4a08      	ldr	r2, [pc, #32]	; (80002b4 <pin_init+0x98>)
 8000292:	f043 0301 	orr.w	r3, r3, #1
 8000296:	6013      	str	r3, [r2, #0]

}
 8000298:	bf00      	nop
 800029a:	46bd      	mov	sp, r7
 800029c:	bc80      	pop	{r7}
 800029e:	4770      	bx	lr
 80002a0:	40021018 	.word	0x40021018
 80002a4:	40010804 	.word	0x40010804
 80002a8:	40010800 	.word	0x40010800
 80002ac:	40010c00 	.word	0x40010c00
 80002b0:	4001080c 	.word	0x4001080c
 80002b4:	40010c0c 	.word	0x40010c0c

080002b8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002b8:	480d      	ldr	r0, [pc, #52]	; (80002f0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ba:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002bc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c0:	480c      	ldr	r0, [pc, #48]	; (80002f4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002c2:	490d      	ldr	r1, [pc, #52]	; (80002f8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002c4:	4a0d      	ldr	r2, [pc, #52]	; (80002fc <LoopForever+0xe>)
  movs r3, #0
 80002c6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002c8:	e002      	b.n	80002d0 <LoopCopyDataInit>

080002ca <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ca:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002cc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ce:	3304      	adds	r3, #4

080002d0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002d2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002d4:	d3f9      	bcc.n	80002ca <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002d6:	4a0a      	ldr	r2, [pc, #40]	; (8000300 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002d8:	4c0a      	ldr	r4, [pc, #40]	; (8000304 <LoopForever+0x16>)
  movs r3, #0
 80002da:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002dc:	e001      	b.n	80002e2 <LoopFillZerobss>

080002de <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002de:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e0:	3204      	adds	r2, #4

080002e2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002e2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002e4:	d3fb      	bcc.n	80002de <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002e6:	f000 f811 	bl	800030c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ea:	f7ff ff41 	bl	8000170 <main>

080002ee <LoopForever>:

LoopForever:
    b LoopForever
 80002ee:	e7fe      	b.n	80002ee <LoopForever>
  ldr   r0, =_estack
 80002f0:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 80002f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002f8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002fc:	08000374 	.word	0x08000374
  ldr r2, =_sbss
 8000300:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000304:	2000001c 	.word	0x2000001c

08000308 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000308:	e7fe      	b.n	8000308 <ADC1_2_IRQHandler>
	...

0800030c <__libc_init_array>:
 800030c:	b570      	push	{r4, r5, r6, lr}
 800030e:	2500      	movs	r5, #0
 8000310:	4e0c      	ldr	r6, [pc, #48]	; (8000344 <__libc_init_array+0x38>)
 8000312:	4c0d      	ldr	r4, [pc, #52]	; (8000348 <__libc_init_array+0x3c>)
 8000314:	1ba4      	subs	r4, r4, r6
 8000316:	10a4      	asrs	r4, r4, #2
 8000318:	42a5      	cmp	r5, r4
 800031a:	d109      	bne.n	8000330 <__libc_init_array+0x24>
 800031c:	f000 f81a 	bl	8000354 <_init>
 8000320:	2500      	movs	r5, #0
 8000322:	4e0a      	ldr	r6, [pc, #40]	; (800034c <__libc_init_array+0x40>)
 8000324:	4c0a      	ldr	r4, [pc, #40]	; (8000350 <__libc_init_array+0x44>)
 8000326:	1ba4      	subs	r4, r4, r6
 8000328:	10a4      	asrs	r4, r4, #2
 800032a:	42a5      	cmp	r5, r4
 800032c:	d105      	bne.n	800033a <__libc_init_array+0x2e>
 800032e:	bd70      	pop	{r4, r5, r6, pc}
 8000330:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000334:	4798      	blx	r3
 8000336:	3501      	adds	r5, #1
 8000338:	e7ee      	b.n	8000318 <__libc_init_array+0xc>
 800033a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800033e:	4798      	blx	r3
 8000340:	3501      	adds	r5, #1
 8000342:	e7f2      	b.n	800032a <__libc_init_array+0x1e>
 8000344:	0800036c 	.word	0x0800036c
 8000348:	0800036c 	.word	0x0800036c
 800034c:	0800036c 	.word	0x0800036c
 8000350:	08000370 	.word	0x08000370

08000354 <_init>:
 8000354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000356:	bf00      	nop
 8000358:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800035a:	bc08      	pop	{r3}
 800035c:	469e      	mov	lr, r3
 800035e:	4770      	bx	lr

08000360 <_fini>:
 8000360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000362:	bf00      	nop
 8000364:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000366:	bc08      	pop	{r3}
 8000368:	469e      	mov	lr, r3
 800036a:	4770      	bx	lr
